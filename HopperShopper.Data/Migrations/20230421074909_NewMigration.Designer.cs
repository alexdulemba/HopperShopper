// <auto-generated />
using System;
using HopperShopper.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HopperShopper.Data.Migrations
{
    [DbContext(typeof(HopperShopperContext))]
    [Migration("20230421074909_NewMigration")]
    partial class NewMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("CartProduct", b =>
                {
                    b.Property<Guid>("CartsObjectID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductsObjectID")
                        .HasColumnType("TEXT");

                    b.HasKey("CartsObjectID", "ProductsObjectID");

                    b.HasIndex("ProductsObjectID");

                    b.ToTable("CartProduct");
                });

            modelBuilder.Entity("HopperShopper.Entities.Cart", b =>
                {
                    b.Property<Guid>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerObjectID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Subtotal")
                        .HasColumnType("REAL");

                    b.HasKey("ObjectID");

                    b.HasIndex("CustomerObjectID")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("HopperShopper.Entities.CreditCard", b =>
                {
                    b.Property<Guid>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CCV")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CardholderName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PaymentMethodObjectID")
                        .HasColumnType("TEXT");

                    b.HasKey("ObjectID");

                    b.HasIndex("PaymentMethodObjectID")
                        .IsUnique();

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("HopperShopper.Entities.Customer", b =>
                {
                    b.Property<Guid>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("ObjectID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HopperShopper.Entities.Order", b =>
                {
                    b.Property<Guid>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerObjectID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DatePlaced")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemCount")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Total")
                        .HasColumnType("REAL");

                    b.HasKey("ObjectID");

                    b.HasIndex("CustomerObjectID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HopperShopper.Entities.PaymentMethod", b =>
                {
                    b.Property<Guid>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerObjectID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.HasKey("ObjectID");

                    b.HasIndex("CustomerObjectID");

                    b.ToTable("PaymentMethods");
                });

            modelBuilder.Entity("HopperShopper.Entities.Product", b =>
                {
                    b.Property<Guid>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Price")
                        .HasColumnType("REAL");

                    b.HasKey("ObjectID");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HopperShopper.Entities.ProductCategory", b =>
                {
                    b.Property<Guid>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ObjectID");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("HopperShopper.Entities.SearchHistoryEntry", b =>
                {
                    b.Property<Guid>("ObjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerObjectID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeEntered")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ObjectID");

                    b.HasIndex("CustomerObjectID");

                    b.ToTable("CustomerSearchHistory");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<Guid>("OrdersObjectID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductsObjectID")
                        .HasColumnType("TEXT");

                    b.HasKey("OrdersObjectID", "ProductsObjectID");

                    b.HasIndex("ProductsObjectID");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("ProductProductCategory", b =>
                {
                    b.Property<Guid>("CategoriesObjectID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProductsObjectID")
                        .HasColumnType("TEXT");

                    b.HasKey("CategoriesObjectID", "ProductsObjectID");

                    b.HasIndex("ProductsObjectID");

                    b.ToTable("ProductProductCategory");
                });

            modelBuilder.Entity("CartProduct", b =>
                {
                    b.HasOne("HopperShopper.Entities.Cart", null)
                        .WithMany()
                        .HasForeignKey("CartsObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HopperShopper.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HopperShopper.Entities.Cart", b =>
                {
                    b.HasOne("HopperShopper.Entities.Customer", "Customer")
                        .WithOne("Cart")
                        .HasForeignKey("HopperShopper.Entities.Cart", "CustomerObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("HopperShopper.Entities.CreditCard", b =>
                {
                    b.HasOne("HopperShopper.Entities.PaymentMethod", "PaymentMethod")
                        .WithOne("CreditCard")
                        .HasForeignKey("HopperShopper.Entities.CreditCard", "PaymentMethodObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentMethod");
                });

            modelBuilder.Entity("HopperShopper.Entities.Order", b =>
                {
                    b.HasOne("HopperShopper.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("HopperShopper.Entities.PaymentMethod", b =>
                {
                    b.HasOne("HopperShopper.Entities.Customer", "Customer")
                        .WithMany("PaymentMethods")
                        .HasForeignKey("CustomerObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("HopperShopper.Entities.SearchHistoryEntry", b =>
                {
                    b.HasOne("HopperShopper.Entities.Customer", "Customer")
                        .WithMany("SearchHistoryEntries")
                        .HasForeignKey("CustomerObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("HopperShopper.Entities.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HopperShopper.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProductProductCategory", b =>
                {
                    b.HasOne("HopperShopper.Entities.ProductCategory", null)
                        .WithMany()
                        .HasForeignKey("CategoriesObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HopperShopper.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsObjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HopperShopper.Entities.Customer", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("Orders");

                    b.Navigation("PaymentMethods");

                    b.Navigation("SearchHistoryEntries");
                });

            modelBuilder.Entity("HopperShopper.Entities.PaymentMethod", b =>
                {
                    b.Navigation("CreditCard")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
